======
XRootD
======

Release Notes
=============

-------------
Version 3.1.0
-------------

+ **New Features**
   * Use CMake to build the source code and retire all the other build systems.
   * Add IOV as a selectable detail to xrootd.monitor directive.
   * Provide a mode in xrootdfs to auto-update internal list of data servers.
     and extend client connection TTL from one hour to infinity.
   * Provide virtual xattr ("xroot.cksum") to obtain checksum for consistency.
   * Make xrdadler32 use the new checksum format if it is set (fallback to old
     format otherwise). In all cases, the old format is converted to the new
     format whenever possible.
   * Enforce r/o exports in the proxy server (finally added).
   * Allow auto-fluching of I/O stream monitoring (default is off).
     Patch submitted by Matevz Tadel, UCSD.
   * Make proxy honor the export list at the storage layer. This allows sites
     to disable staging via the proxy by specifying nostage for otherwise locally
     stageable paths.
   * Do not export the stage attribute to the meta-manager unless the path is
     tagged with the stage+ attrbute on the export directive.
   * WARNING: This update makes the oss plug-in source incompatible because an
     additional parameter was added to the Stat() method. The update is binary
     compatible and so only affects sites that recompile their plug-in.
   * Allow the query checksum request to be issued via a proxy server.
   * Add a query checksum interface to the POSIX interface.
   * Defines the livXrdSecgsiAuthzVO plug-in to allow easy mapping from voms
     vo names to users and groups. The plugin is configurable at run-time.
   * Allow the OucErrInfo object to point to an environment.
   * Add method to SysDNS to format an AF_INETx address into the RFC IPV6
     recommended format.
   * Allow pointers to be placed in the OucEnv environment table.
   * Extend the kXR_protocol request to allow the server to return detailed
     information about node's role. This is backwardly compatible.
   * The client uses kXR_protocol request to query for the server's role
     (to distinguish managers from meta managers).
   * The client goes back to a meta manager on authentication failure.
   * The client prints to stdout the redirections it gets. This behavior may be
     disabled by setting the XRD_PRINTREDIRECTS environment variable to 0, or,
     from C++ by saying: EnvPutInt( NAME_PRINT_REDIRECTS, 0 )
   * Set $HOST value for possible copycmd substitution.
   * Phase 1 to allow for redirection monitoring. Add rbuff and redir options
     to the xrootd.monitor directive.
   * Add error, redirect, and delay counts to the xrootd protocol summary
     statistics.
   * Allow file additions/deletion to be communicated to the XrdCnsd so that is
     can maintain an accurate inventory. This update adds the frm.all.cnsd
     directive which specifies how the information is to be commuincated.
   * Enable cmsd monitoring. For now, only [meta]manager information is reported.
   * Add new repstats config directive to increase reporting detail.
   * New class, XrdCmsRole, to make role naming/handling consistent.
   * Implement the 'cms.delay qdn' directive which allows one to tell the
     meta-manager the minimum number of responses needed to satisfy a hold
     delay (i.e. fast redirect).
   * Accept XrdSecSSSKT envar as documented but also continue to support
     XrdSecsssKT for backward compatability.
   * Allow servers to specify to the meta-manager what share of requests they
     are willing to handle. Add the 'cms.sched gsdflt' and 'cms.sched gshr'
     configuration directives to specify this.
   * Include additional information in the protocol statistics.
   * Resize some counters to prevent overflows.
   * Add the 'cms.delay qdn' directive to allow better redirection control in
     the future.
   * Allow a plugin (notably the proxy plugin) to disable async I/O.
   * Implement a general memory caching object. Currently, this will be used
     by the Posix object.
   * Allow optional memory caching when using the Posix library. This is
     primarily used by the proxy object to reduce trips to a data server when
     small blocks are accessed via the proxy server. This requires
     configuration using the new 'pss.memcache' directive.
   * Finally implement adding authentication information to the user monitoring
     record (requested by Matevz Tadel, CMS). This adds a new generic option,
     auth, to the xrootd.monitor directive. It needs to be specified for the
     authentication information to be added. This keeps backward compatability.
   * Add a new method, chksum, to the standard filesystem interface.
   * Integrate checksums into the logical filesystem layer implementation.
     See the ofs.ckslib directive on how to do non-default configuration.
     This also added a more effecient lfn2pfn() method to the storage system.
   * Allow native checksums to be enabled in the xrootd layer.
     See the xrootd.chksum directive on how to do this.
   * Add checksum management to the frm_admin command.
   * Allow XrdOucProg to dispatch a local program as well as a process.
   * Allow a line to be insrerted into an XrdOucStream managed stream.
   * Implement native checksums usable stand-alone or as plugins. Three digests
     are supported: adler32, crc32, and md5. An additional digest can be added
     via a plugin. Also, the native digests can be over-ridden via a plugin.
   * In XrdSecgsi, new interface for the authorization plug-in which has now full
     access to the XrdSecEntity object, with the possibility to fill/modify all the
     fields according to the proxy chain. The plug-in is now called at the end of
     the all process, after a successful handshake and DN-username mapping.
     Implementations must contain three extern C functions; see the dummy example
     provided in src/XrdSecgsi/XrdSecgsiAuthzFunDN.cc. 
     See also the header of XrdSecProtocolgsi::LoadAuthzFun.
   * In XrdCryptosslgsiAux, add function to extract the VOMS attributes; can be
     used in authz plug-ins.
   * In XrdSecgsi, add possibility to extract the VOMS attributes and save them
     in the XrdSecEntity. New switch '-vomsat:0/1 [1]'.
   * In 'xrdgsiproxy info' show also the VOMS attributes, if present. 
   * Automatically build the RPM for the xrootd user when an OSG build is detected
     and add fedora > 15 init scripts dependencies

+ **Major bug fixes**
   * Do not close the loger's shadow file descriptor when backgrounding as
     this may cause random crashes later on.
   * Avoid SEGV by setting network pointer prior to loading the 1st protocol.
   * Enforce r/o path during mkdir operations.
   * Avoid segv when initializing the finder on a multi-core machine.
   * Fix incorrect lock handling for multiple waiters.
   * Fix possible deadlocks in XrdSutCache preventing the pwd security module
     to work correctly

+ **Minor bug fixes**
   * Properly handle the case when a site has an excessive number of groups
     assignments.
   * Prevent the response to a query from being truncated on the client side.
   * Report readv information in the detailed monitoring stream.
   * Correct default settings due to feature interactions after the fact. Now,
     oss.defaults acts as if the setting were actually specified via oss.export.
   * Actually use the N2N library of specified or implied via pss.localroot
     for proxy server interactions withthe origin (required for Atlas T2).
   * Use re-enterant versions of getpwuid() and getpwgid(). This is need for
     FUSE.
   * Correct bad english in a few error messages.
   * Set correct checksum length when converting ASCII to binary.
   * Allow the sss protocol to work for multi-homed hosts.
   * Correct definition of AtomicISM that caused the maximum link count to
     never be updated in the statistics.
   * Apply N2N mapping to source path when relocating the file.
   * Report correct port when locate is directly issued to a data server
     (before it was being reported as 0).
   * Make the default file system a pointer to a dynamic instance of XrdOfs
     instead of a global static (i.e. the Andreas Peters patch). This makes
     writing an ofs plugin easier.
   * Fix the RPM uninstall scriptlets incorrectly invoking /sbin/ldconfig.
   * Install XrdOlbMonPerf and netchk tools.
   * Fix a bug preventing the core of authentication errors to be logged to clients
   * In the krb5 security plugin, define KRB5CCNAME to point to the credential
     cache file /tmp/krb5cc_<uid> only if this file exists and is readable.
     Solves an issue with credentials cached in memory (API:<uid>:n).
   * Fix array deletion mismatches reported by cppcheck (from D. Volgyes)
   * Make sure that loading of XrdSecgsi.so fails if either the GMAPFun or the
     AuthzFun plug-ins fail to load.

+ **Miscellaneous**
   * Drop Windows support.
   * Code cleanup: remove XrdTokenAuthzOfs, simple tests, broken utilities,
     the gridftp code, krb4 and secssl plugins, obsolete documentation files
   * Make the loadable module extensions configurable depending on the platform
     (so on Linux and Solaris, dylib on MacOs)
   * Add new XrdVNUMBER macro.
   * Clean up the conditional compilation macros.
   * Remove compression related attributes (compchk, ssdec) and directives
     (compdetect) as they were never used nor fully implemented.
   * Remove the userprty directive. It was deprecated and never specified.
   * Refactor PosixPreeload and Posix libraries to prevent split initialization
     of the preload library which will cause failures on certain systems.
   * Provide automatic proxy checksum defaults when role is set to proxy.
   * Remove all references via extern statements to object instances. This
     only applies to the Xrd package.
   * Do not echo lines qualified by an in-line if when the if fails.
   * Remove the old "redirect" directive. It has passed its prime.
   * Remove back references to symbols defined in XrdXrootd package used by
     the cms client to allow for clean shared library builds.
   * Remove externs to XrdSecGetProtocol and XrdSecGetService from
     XrdSecInterface.hh to avoid having undefined references just because the
     include file was included somewhere.
   * Rename XrdNetDNS to XrdSysDNS to avoid cross-dependencies. This means that all
     plug-in developers will need to do the same as XrdNetDNS no longer exists.
   * Split XrdFrm into XrdFrm and XrdFrc. This prevents cross-dependencies in
     packages that use the File Residency Manager.

-------------
Version 3.0.5
-------------

+ **Major bug fixes**
   * Avoid stage failures when target file exists in purgeable or writable space.
   * Make sure all the threads are joined when closing a physical connection.
   * Fix free/delete mismatch in XrdSecProtocolgsi et al.

+ **Minor bug fixes**
   * Remove old async shutdown workaround patch introduced in Linux 2.3. The
     problem has been since fixed and the solution now causes problems.
   * Install the netchk tool

-------------
Version 3.0.4
-------------

+ **New features**
   * xrdcp now has -version parameter
   * xrdcp automatically ads the oss.asize hint to the url opaque data.
     This functionality may be disabled by setting the XrdCpSizeHint
     variable to 0 (XRD_XRDCPSIZEHIN in the shell).
   * The client will try to resolve the server hostname on every retry to
     enable DNS failovers.
   * RPM: devel package split into libs-devel, client-devel and server-devel
   * XrootdFS: all paramenters can be passed via command line, add -h.
   * Allow a plugin (notably the proxy plugin) to disable async I/O.
   * New class XrdSysRWLock interfacing the pthread_rwlock functionality
   * In XrdSecEntity: Add new fields 'creds' and 'credslen' to be filled
     with the raw client credentials
   * In XrdSutCache: Use XrdSysRWLock to coordinate concurrent access to
     the cache
   * In XrdSecgsi:

     - Add option to have Entity.name filled with the plain DN, instead of
       the DN hash, when no mapping is requested or found.

     - Enable cache also for authz mapping results.

     - Do not require the existence of a grid-mapfile if gmapopt=2 and there is at least
       a gmapfun or an authzfun defined.

     - Add example of mapping function allowing to match parts of the DN

     - Extend existing option 'authzpxy' to allow exporting the incoming client credentials in
       XrdSecEntity.

+ **Major bug fixes**
   * Async write errors are now being properly caught and reacted to.
     XrdClient::Close will now fail if it cannot recover from async
     write errors.
   * xrdcp prints an error message and returns failure to the shell
     when some of the write requests it issues fail.
   * libXrdPosixPreload now builds with autotools and is included into
     the xrootd-client RPM
   * RPM: FFS moved from libs to client
   * Properly parse oss.asize. This because a major problem when xrdcp started
     adding this to the url which causes the copy to fail.
   * Spin connection portion of proxy initialization to a background thread.
     This prevents init.d hangs when a redirector is not available.

+ **Minor bug fixes**
   * Test for 64-bit atomics instead 32-bit ones. Fixes build on 32-bit PowerPC.
   * RPM: xrootd-fuse now depends on fuse
   * Take correctly into accoutn summer time in calculating the time left for
     a proxy validity
   * Add support for Ubuntu 11 which uses the directory /usr/lib/`dpkg-architecture
     -qDEB_HOST_MULTIARCH` to store platform dependent libraries.

-------------
Version 3.0.3
-------------

+ **New features**
   * Change configure.classic to handle various versions of processors in a
     more sane way (this fixes several Solaris issues and atomics for i686).
   * Add fwdwait option to cms.request directive to allow pacing of forwarded
     requests (off by default).
   * Use native memory synchronization primitives when available when doing
     network I/O. This will eventually be extended to cover all other cases.
   * Add the qdl option to the cms.delay directive to allow changing the
     query window independently of the time a client is asked to wait for the
     query to actually complete.
   * Add 'pss.namelib' directive to allow proxies to pre-translate the lfn
     for servers that cannot do so (e.g., dCache xrootd door).
   * Optimize handling of shared-everything ile systems (e.g., dCache, GPFS,
     DFS, Lustre, etc.) in the cmsd.
   * Implement optional throttling for meta-manager requests in the cmsd.
   * New cmsd directive, cms.dfs, declares that the underlying file system
     is a shared-everything system (i.e., distributed file system) and allow
     for optimal configuration and meta-manager throttling.
   * Change the oss and fm components to use file extended attributes instead
     of meta-files. This affects copy, create, reloc, rename, and unlink in the
     oss layer. Migrate, purge, transfer, and most admin commands in the frm
     component. The 'all.export' directive now accepts the noxattr/xattr option.
     WARNING: If the migrator or purge options have been specified for any path
     in the 'all.export; directive then this change requires either the the
     'oss.runmodeold' directive be added to the configuration file to provide
     backward compatibility or that the name and data spaces be migrated using
     the frm_admin command. See "Migrating tp Extended Attributes" manual for
     detailed information and the new 'frm_admin convert' subcommand.
   * Avoid physical copy if the operation can be handled using hard links. This
     greatly speeds up static space token reassignment.
   * Add platform independent interface to extended file attributes.
   * RPM packaging and Red Hat Enterprise Linux compatible init scripts
     capable of handling multiple instances of the xrootd daemons. The instances
     can be defined in the /etc/sysconfig/xrootd file and then handled using standard::

       service xrootd start|stop|...
       service cmsd start|stop|...
       ...

     or handled by name::

       service xrootd start instance1 instance5

   * New '-s' commandline option for xrootd, cmsd, frm_purged and frm_xfrd
     creating a pidfile.
   * xrootd, cmsd, frm_purged and frm_xfrd now return failure to the shell
     when called with '-b' option (daemonization) and the daemon fails to
     initialize.
   * New 'EnableTCPKeepAlive' client environment option added enabling the TCP
     stack keep-alive functionality for the sockets.
     On Linux three addtional fine-tunning options are available:

     - TCPKeepAliveTime - interval (in seconds) between the last data packet and the first keep-alive
       probe
     - TCPKeepAliveInterval - interval (in seconds) between the probes
     - TCPKeepAliveProbes - number of probes lost to consider the connection broken

   * New functionality handling process forking. When enabled (via the 'EnableForkHandlers'
     env option) prior to a call to fork it shuts down all the xrootd connection management
     facilities (including the connections themselves) and reinitializes them after the fork
     both in the parent and the child process. This ensures relative fork safety provided
     that all the XrdClient and XrdAdmin instances are closed when the fork function is invoked.

+ **Major bug fixes**
   * Add missing braces that caused config failure in frm_admin command.
   * Account for correct path when -M value is zero in hpsscp command.
   * In XrdCryptossl, fix for thread-safeness; solves random crashes observed on the
     server side under high authentication frequency
   * In XrdOucBonjour, fix important issue with host domain name registration, preventing
     the correct domain to be posted.

+ **Minor bug fixes**
   * Correct file discovery propogation for proxy manager relative to meta-managers.
   * Correct oss partition selection algorithm to further spread out file
     allocation.
   * Allow underscores in set/setenv variables.
   * Add null byte after checksum value response.
   * Move mapping of errno to xrootd error code to the protocol package where it
     belongs. This also removes a cross dependency.
   * Correct RetToken() behaviour in the presence of multiple spaces between tokens and
     the previous call returned the remainder of the line (very obscure circumstances).
   * [bug #77535] xrdcp now returns an error to the shell when it fails to copy the file
   * [bug #79710] xrdcp now gracefully aborts when it encounters a corrupted local file
   * Reset the transaction timeout for the Query method.
     This fixes transaction timeout issues for clients doing only queries.
   * Rename variable to remove conflict between it and global of the same name.
   * Fix frm_admin command line option parsing so it does not trip over
     subcommand options. This also fixes a SEGV in MacOS when this actually
     happens.
   * Enable the '-md5' option when OpenSSL is present and xrootd is built with autotools.

+ **Documentation**
   * Added man pages for: xprep, xrd, xrdcp, xrdstagetool, xrdgsiproxy

-------------
Version 3.0.2
-------------

+ **Minor bug fixes**
   * Fix the build on Solaris 10.
   * Fix the build on SLC4.
   * Fix the out-of-the-source-tree builds with autotools.
   * Fix a segfault while doing a recursive copy from root:// to root://.

-------------
Version 3.0.1
-------------

+ **New features**
   * New application, cconfing, added to display configuration files relative to a host-program-instance.
   * New application, netchk, that tests that firewalls have been correctly setup.
   * New configure.classic option to allow use of stl4port library for Solaris.
   * New internal feature in XrdPosix library to not shadow files with actual file descriptors (used by the proxy
     service). This increases scalability.
   * Allow the xrootd server to tell the client that it is a meta-manager.
   * Support fo proxies generated by Globus version 4.2.1 in libXrdSecssl.

+ **Major bug fixes**
   * Change link options for xrdadler32 to not use shared libraries. The previous setup caused the command to hang
     upon exit.
   * Remove instance of XrdPosixXrootd from that same file. Including it disallows defaults from being changed.

+ **Minor bug fixes**
   * Fix XrdOucStream to not return ending "fi".
   * Correct network option interference -- do not turn on network nodnr option should the keepalive option
     be specified.
   * Remove duplicate option in option table used by the proxy service.
   * Compile on Solaris 11 Express using SunCC.
   * Compile on Windows using MSVC++2010.
